@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix sigkdd: <http://sigkdd#>.
@prefix : <http://cmt#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dcmitype: <http://purl.org/dc/dcmitype/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .
@prefix protege: <http://protege.stanford.edu/plugins/owl/protege#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix xsp: <http://www.owl-ontologies.com/2005/08/07/xsp.owl#> .
@base <http://sigkdd#> .
<#Acceptance>
         rr:logicalTable [ rr:tableName "acceptance"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Acceptance/{id}";
                 rr:class cmt:Acceptance
         ].
<#Administrator>
         rr:logicalTable [ rr:tableName "Administrator"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{ID}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "acceptPaper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:addProgramCommitteeMember;
                 rr:objectMap [
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:rejectPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#assignReviewer>
         rr:logicalTable [ rr:tableName "assignreviewer"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#enableVirtualMeeting>
         rr:logicalTable [ rr:tableName "enablevirtualmeeting"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:enableVirtualMeeting;
                 rr:objectMap [
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "conference";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#enterReviewCriteria>
         rr:logicalTable [ rr:tableName "enterreviewcriteria"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:enterReviewCriteria;
                 rr:objectMap [
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "conference";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#finalizePaperAssignment>
         rr:logicalTable [ rr:tableName "finalizepaperassignment"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:finalizePaperAssignment;
                 rr:objectMap [
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "conference";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#printHardcopyMailingManifests>
         rr:logicalTable [ rr:tableName "hardcopymailingmanifestsp"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:printHardcopyMailingManifests;
                 rr:objectMap [
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "conference";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#setMaxPapers>
         rr:logicalTable [ rr:tableName "setmaxpapers"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Administrator/{administrator}";
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:setMaxPapers;
                 rr:objectMap [
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "programcommitteemember";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:setMaxPapers;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "programcommitteemember";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:setMaxPapers;
                 rr:objectMap [
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "programcommitteemember";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#AssociatedChair>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#AssociatedChair/{ID}";
                 rr:class cmt:AssociatedChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#Author>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Author/{ID}";
                 rr:class cmt:Author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#writePaper>
         rr:logicalTable [ rr:tableName "cowritepaper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Author/{coauthor}";
                 rr:class cmt:Author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#submitPaper>
         rr:logicalTable [ rr:tableName "submitpaper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Author/{author}";
                 rr:class cmt:Author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:submitPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:submitPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#AuthorNotReviewer>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#AuthorNotReviewer/{ID}";
                 rr:class cmt:AuthorNotReviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Bid>
         rr:logicalTable [ rr:tableName "bid"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Bid/{id}";
                 rr:class cmt:Bid
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:adjustedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "adjustedby";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Chairman>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Chairman/{ID}";
                 rr:class cmt:Chairman
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#Co-author>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Co-author/{ID}";
                 rr:class cmt:Co-author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#co-writePaper>
         rr:logicalTable [ rr:tableName "cowritepaper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Co-author/{coauthor}";
                 rr:class cmt:Co-author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:co-writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:co-writePaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Conference>
         rr:logicalTable [ rr:tableName "conference"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Conference/{id}";
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptsHardcopySubmissions;
                 rr:objectMap [ rr:column "acceptshardcopysubmissions"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:date;
                 rr:objectMap [ rr:column "date"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:logoURL;
                 rr:objectMap [ rr:column "logourl"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:reviewsPerPaper;
                 rr:objectMap [ rr:column "reviewsperpaper"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:siteURL;
                 rr:objectMap [ rr:column "siteurl"];
         ].
<#detailsEnteredBy>
         rr:logicalTable [ rr:tableName "detailsenteredby"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Conference/{conference}";
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:detailsEnteredBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:detailsEnteredBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:detailsEnteredBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#hasConferenceMember>
         rr:logicalTable [ rr:tableName "hasconferencemember"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Conference/{conference}";
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasConferenceMember;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "conferencemember";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasConferenceMember;
                 rr:objectMap [
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "conferencemember";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#paperAssignmentToolsRunBy>
         rr:logicalTable [ rr:tableName "paperassignmenttoolsrunby"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Conference/{conference}";
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperAssignmentToolsRunBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperAssignmentToolsRunBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperAssignmentToolsRunBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#reviewerBiddingStartedBy>
         rr:logicalTable [ rr:tableName "reviewerbiddingstartedby"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Conference/{conference}";
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:reviewerBiddingStartedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:reviewerBiddingStartedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:reviewerBiddingStartedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "administrator";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#ConferenceChair>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ConferenceChair/{ID}";
                 rr:class cmt:ConferenceChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#ConferenceMember>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ConferenceMember/{ID}";
                 rr:class cmt:ConferenceMember
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#memberOfConference>
         rr:logicalTable [ rr:tableName "person_conference"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ConferenceMember/{cid}";
                 rr:class cmt:ConferenceMember
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:memberOfConference;
                 rr:objectMap [
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "cid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Decision>
         rr:logicalTable [ rr:tableName "papers"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Decision/{id}";
                 rr:class cmt:Decision
         ].
<#Document>
         rr:logicalTable [ rr:tableName "document"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Document/{id}";
                 rr:class cmt:Document
         ].
<#ExternalReviewer>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ExternalReviewer/{ID}";
                 rr:class cmt:ExternalReviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#assignedByReviewer>
         rr:logicalTable [ rr:tableName "assignreviewer"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ExternalReviewer/{reviewer}";
                 rr:class cmt:ExternalReviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Meta-Review>
         rr:logicalTable [ rr:tableName "review"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Meta-Review/{id}";
                 rr:class cmt:Meta-Review
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writtenBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "writtenby";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Meta-Reviewer>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Meta-Reviewer/{ID}";
                 rr:class cmt:Meta-Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:adjustBid;
                 rr:objectMap [
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignExternalReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#ExternalReviewer>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writeReview;
                 rr:objectMap [
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Paper>
         rr:logicalTable [ rr:tableName "paper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Paper/{paperid}";
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rr:column "paperid"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rr:column "title"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "acceptedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasAuthor;
                 rr:objectMap [
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasDecision;
                 rr:objectMap [
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "hasdecision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByMeta-Reviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:rejectedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejectedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasBid;
                 rr:objectMap [
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasCo-author;
                 rr:objectMap [
                         rr:parentTriplesMap <#Co-author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#assignedTo>
         rr:logicalTable [ rr:tableName "assignedto"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Paper/{paper}";
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedTo;
                 rr:objectMap [
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedTo;
                 rr:objectMap [
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignedTo;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#hasSubjectArea>
         rr:logicalTable [ rr:tableName "hassubjectarea"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Paper/{paper}";
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasSubjectArea;
                 rr:objectMap [
                         rr:parentTriplesMap <#SubjectArea>;
                         rr:joinCondition [
                                 rr:child "subjectarea";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#PaperAbstract>
         rr:logicalTable [ rr:tableName "paper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#PaperAbstract/{id}";
                 rr:class cmt:PaperAbstract
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rr:column "paperid"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rr:column "title"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "acceptedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasAuthor;
                 rr:objectMap [
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasDecision;
                 rr:objectMap [
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "hasdecision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByMeta-Reviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:rejectedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejectedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasBid;
                 rr:objectMap [
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasCo-author;
                 rr:objectMap [
                         rr:parentTriplesMap <#Co-author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#PaperFullVersion>
         rr:logicalTable [ rr:tableName "paper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#PaperFullVersion/{id}";
                 rr:class cmt:PaperFullVersion
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rr:column "paperid"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rr:column "title"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "acceptedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasAuthor;
                 rr:objectMap [
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasDecision;
                 rr:objectMap [
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "hasdecision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByMeta-Reviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:rejectedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejectedby";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasBid;
                 rr:objectMap [
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasCo-author;
                 rr:objectMap [
                         rr:parentTriplesMap <#Co-author>;
                         rr:joinCondition [
                                 rr:child "hasauthor";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readByReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "readbymetareviewer";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Person>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Person/{ID}";
                 rr:class cmt:Person
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#hasConflictOfInterest>
         rr:logicalTable [ rr:tableName "hasconflictofinterest"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Person/{person}";
                 rr:class cmt:Person
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasConflictOfInterest;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "document";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Preference>
         rr:logicalTable [ rr:tableName "preference"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Preference/{id}";
                 rr:class cmt:Preference
         ].
<#ProgramCommittee>
         rr:logicalTable [ rr:tableName "program_committee_members"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ProgramCommittee/{programcommittee}";
                 rr:class cmt:ProgramCommittee
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:hasProgramCommitteeMember;
                 rr:objectMap [
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#ProgramCommitteeChair>
         rr:logicalTable [ rr:tableName "programcommitteemember"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ProgramCommitteeChair/{id}";
                 rr:class cmt:ProgramCommitteeChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:maxPapers;
                 rr:objectMap [ rr:column "maxpapers"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:addedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "addedby";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#endReview>
         rr:logicalTable [ rr:tableName "endreview"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ProgramCommitteeChair/{programcommitteechair}";
                 rr:class cmt:ProgramCommitteeChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:endReview;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "review";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:endReview;
                 rr:objectMap [
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "review";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#ProgramCommitteeMember>
         rr:logicalTable [ rr:tableName "programcommitteemember"];
         rr:subjectMap [
                 rr:template "http://sigkdd#ProgramCommitteeMember/{id}";
                 rr:class cmt:ProgramCommitteeMember
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:maxPapers;
                 rr:objectMap [ rr:column "maxpapers"];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:addedBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "addedby";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Rejection>
         rr:logicalTable [ rr:tableName "papers"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Rejection/{id}";
                 rr:class cmt:Rejection
         ].
<#Review>
         rr:logicalTable [ rr:tableName "review"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Review/{id}";
                 rr:class cmt:Review
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writtenBy;
                 rr:objectMap [
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "writtenby";
                                 rr:parent "ID";
                         ];
                 ];
         ].
<#Reviewer>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Reviewer/{ID}";
                 rr:class cmt:Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:adjustBid;
                 rr:objectMap [
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:assignExternalReviewer;
                 rr:objectMap [
                         rr:parentTriplesMap <#ExternalReviewer>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "ID";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:writeReview;
                 rr:objectMap [
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "ID";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#readPaper>
         rr:logicalTable [ rr:tableName "paper"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Reviewer/{title}";
                 rr:class cmt:Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paperid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:readPaper;
                 rr:objectMap [
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paperid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#SubjectArea>
         rr:logicalTable [ rr:tableName "subjectarea"];
         rr:subjectMap [
                 rr:template "http://sigkdd#SubjectArea/{id}";
                 rr:class cmt:SubjectArea
         ].
<#User>
         rr:logicalTable [ rr:tableName "Person"];
         rr:subjectMap [
                 rr:template "http://sigkdd#User/{ID}";
                 rr:class cmt:User
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rr:column "email"];
         ].
<#Review>
         rr:logicalTable [ rr:tableName "review"];
         rr:subjectMap [
                 rr:template "http://sigkdd#Review/{id}";
                 rr:class http://conference#Review
         ].
