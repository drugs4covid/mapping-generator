@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dcmitype: <http://purl.org/dc/dcmitype/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix schema1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix status: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix transit: <http://vocab.org/transit/terms/> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@base <http://vocab.gtfs.org/terms#> .
<#routes> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "routes.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.routes[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Route/{route_id}";
                 rr:termType rr:IRI;
                 rr:class Route;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shortName;
                 ];
                 rr:objectMap [ rr:column "route_short_name"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shortName;
                 ];
                 rr:objectMap [ rr:column "route_long_name"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:code;
                 ];
                 rr:objectMap [ rr:column "route_desc"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:routeType;
                 ];
                 rr:objectMap [ rr:column "route_type"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:fareUrl;
                 ];
                 rr:objectMap [ rr:column "route_url"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:color;
                 ];
                 rr:objectMap [ rr:column "route_color"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:textColor;
                 ];
                 rr:objectMap [ rr:column "route_text_color"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:agency;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#agency>;
                         rr:joinCondition [
                                 rr:child "agency_id";
                                 rr:parent "agency_id";
                         ];
                 ];
         ].
<#calendar> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "calendar.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.calendar[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#CalendarRule/{}";
                 rr:termType rr:IRI;
                 rr:class CalendarRule;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:service;
                 ];
                 rr:objectMap [ rr:column "service_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:monday;
                 ];
                 rr:objectMap [ rr:column "monday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:tuesday;
                 ];
                 rr:objectMap [ rr:column "tuesday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:wednesday;
                 ];
                 rr:objectMap [ rr:column "wednesday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:thursday;
                 ];
                 rr:objectMap [ rr:column "thursday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:friday;
                 ];
                 rr:objectMap [ rr:column "friday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:saturday;
                 ];
                 rr:objectMap [ rr:column "saturday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:sunday;
                 ];
                 rr:objectMap [ rr:column "sunday"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:saturday;
                 ];
                 rr:objectMap [ rr:column "start_date"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:calendar;
                 ];
                 rr:objectMap [ rr:column "end_date"; rr:datatype xsd:string];
         ].
<#trips> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "trips.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.trips[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Trip/{trip_id}";
                 rr:termType rr:IRI;
                 rr:class Trip;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:service;
                 ];
                 rr:objectMap [ rr:column "service_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:headsign;
                 ];
                 rr:objectMap [ rr:column "trip_headsign"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shortName;
                 ];
                 rr:objectMap [ rr:column "trip_short_name"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:direction;
                 ];
                 rr:objectMap [ rr:column "direction_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:block;
                 ];
                 rr:objectMap [ rr:column "block_id"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:wheelchairAccessible;
                 ];
                 rr:objectMap [ rr:column "wheelchair_accessible"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:route;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#routes>;
                         rr:joinCondition [
                                 rr:child "route_id";
                                 rr:parent "route_id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shape;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#shapes>;
                         rr:joinCondition [
                                 rr:child "shape_id";
                                 rr:parent "shape_id";
                         ];
                 ];
         ].
<#stop_times> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "stop_times.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.stop_times[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#StopTime/{}";
                 rr:termType rr:IRI;
                 rr:class StopTime;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:arrivalTime;
                 ];
                 rr:objectMap [ rr:column "arrival_time"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:departureTime;
                 ];
                 rr:objectMap [ rr:column "departure_time"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "stop_sequence"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:headsign;
                 ];
                 rr:objectMap [ rr:column "stop_headsign"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:pickupType;
                 ];
                 rr:objectMap [ rr:column "pickup_type"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:dropOffType;
                 ];
                 rr:objectMap [ rr:column "drop_off_type"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:distanceTraveled;
                 ];
                 rr:objectMap [ rr:column "shape_dist_traveled"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:trip;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#trips>;
                         rr:joinCondition [
                                 rr:child "trip_id";
                                 rr:parent "trip_id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stop;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#stops>;
                         rr:joinCondition [
                                 rr:child "stop_id";
                                 rr:parent "stop_id";
                         ];
                 ];
         ].
<#shapes> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "shapes.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.shapes[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Shape/{shape_id}";
                 rr:termType rr:IRI;
                 rr:class Shape;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shapePoint;
                 ];
                 rr:objectMap [ rr:column "shape_pt_lat"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shapePoint;
                 ];
                 rr:objectMap [ rr:column "shape_pt_lon"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "shape_pt_sequence"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:distanceTraveled;
                 ];
                 rr:objectMap [ rr:column "shape_dist_traveled"; rr:datatype xsd:integer];
         ].
<#agency> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "agency.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.agency[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Agency/{agency_id}";
                 rr:termType rr:IRI;
                 rr:class Agency;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:longName;
                 ];
                 rr:objectMap [ rr:column "agency_name"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:fareUrl;
                 ];
                 rr:objectMap [ rr:column "agency_url"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:timeZone;
                 ];
                 rr:objectMap [ rr:column "agency_timezone"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:calendar;
                 ];
                 rr:objectMap [ rr:column "agency_lang"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:zone;
                 ];
                 rr:objectMap [ rr:column "agency_phone"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:fareUrl;
                 ];
                 rr:objectMap [ rr:column "agency_fare_url"; rr:datatype xsd:string];
         ].
<#stops> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "stops.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.stops[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Stop/{stop_id}";
                 rr:termType rr:IRI;
                 rr:class Stop;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:code;
                 ];
                 rr:objectMap [ rr:column "stop_code"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shortName;
                 ];
                 rr:objectMap [ rr:column "stop_name"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "stop_desc"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "stop_lat"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "stop_lon"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:zone;
                 ];
                 rr:objectMap [ rr:column "zone_id"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:stopSequence;
                 ];
                 rr:objectMap [ rr:column "stop_url"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shapePoint;
                 ];
                 rr:objectMap [ rr:column "location_type"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:parentStation;
                 ];
                 rr:objectMap [ rr:column "parent_station"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:timeZone;
                 ];
                 rr:objectMap [ rr:column "stop_timezone"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shapePoint;
                 ];
                 rr:objectMap [ rr:column "wheelchair_boarding"; rr:datatype xsd:integer];
         ].
<#frequencies> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "frequencies.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.frequencies[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Frequency/{}";
                 rr:termType rr:IRI;
                 rr:class Frequency;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:startTime;
                 ];
                 rr:objectMap [ rr:column "start_time"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:endTime;
                 ];
                 rr:objectMap [ rr:column "end_time"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:headwaySeconds;
                 ];
                 rr:objectMap [ rr:column "headway_secs"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:usesExactTimes;
                 ];
                 rr:objectMap [ rr:column "exact_times"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:trip;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#trips>;
                         rr:joinCondition [
                                 rr:child "trip_id";
                                 rr:parent "trip_id";
                         ];
                 ];
         ].
<#feed_info> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "feed_info.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.feed_info[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#Feed/{}";
                 rr:termType rr:IRI;
                 rr:class Feed;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:shortName;
                 ];
                 rr:objectMap [ rr:column "feed_publisher_name"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:fareUrl;
                 ];
                 rr:objectMap [ rr:column "feed_publisher_url"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:headsign;
                 ];
                 rr:objectMap [ rr:column "feed_lang"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:transferType;
                 ];
                 rr:objectMap [ rr:column "feed_start_date"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:calendar;
                 ];
                 rr:objectMap [ rr:column "feed_end_date"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:headsign;
                 ];
                 rr:objectMap [ rr:column "feed_version"; rr:datatype xsd:integer];
         ].
<#calendar_dates> a rr:TriplesMap;
         rml:logicalSource [
                 rml:source "calendar_dates.json" ;
                 rml:referenceFormulation ql:JSONPath ;
                 rml:iterator "$.calendar_dates[*]"
         ];
         rr:subjectMap [
                 rr:template "http://vocab.gtfs.org/terms#CalendarRule/{}";
                 rr:termType rr:IRI;
                 rr:class CalendarRule;
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:service;
                 ];
                 rr:objectMap [ rr:column "service_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:dateAddition;
                 ];
                 rr:objectMap [ rr:column "date"; rr:datatype xsd:datetime];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant gtfs:direction;
                 ];
                 rr:objectMap [ rr:column "exception_type"; rr:datatype xsd:integer];
         ].
